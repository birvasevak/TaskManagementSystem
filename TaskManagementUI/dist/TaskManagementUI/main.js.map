{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/add-quote/add-quote.component.ts","./src/app/components/add-quote/add-quote.component.html","./src/app/components/delete-quote/delete-quote.component.ts","./src/app/components/delete-quote/delete-quote.component.html","./src/app/auth/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/quotes/quotes.component.ts","./src/app/components/quotes/quotes.component.html","./src/app/material/material.module.ts","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/components/quote-item/quote-item.component.ts","./src/app/components/quote-item/quote-item.component.html","./src/app/components/edit-quote/edit-quote.component.ts","./src/app/components/edit-quote/edit-quote.component.html","./src/app/services/user.service.ts","./src/app/services/quote.service.ts","./src/app/app-routing.module.ts","./src/app/components/user/register/register.component.ts","./src/app/components/user/register/register.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICK9C,0EACI;IAAA,yEAAQ;IAAA,uEAAY;IAAA,4DAAS;IAAC,4EAC9B;IAAA,6EACI;IAAA,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;;;IAaU,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,qHACI;IAER,4DAAM;;;;IAHG,0DAAiC;IAAjC,qFAAiC;;;IAiBtC,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,qHACI;IAER,4DAAM;;;;IAHG,0DAAgC;IAAhC,qFAAgC;;;IAgBrC,sEACI;IAAA,sFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,qHACI;IAER,4DAAM;;;;IAHG,0DAA+B;IAA/B,qFAA+B;;;IAmBpC,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,qHACI;IAER,4DAAM;;;;IAHG,0DAA+B;IAA/B,qFAA+B;;;IAgBpC,sEACI;IAAA,0FACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,qHACI;IAER,4DAAM;;;;IAHG,0DAAuC;IAAvC,sFAAuC;;;ADhFzD,MAAM,iBAAiB;IAI5B,YAAoB,YAA0B,EAAS,SAA0C;QAA7E,iBAAY,GAAZ,YAAY,CAAc;QAAS,cAAS,GAAT,SAAS,CAAiC;IAAI,CAAC;IAEtG,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,WAAW,CAAC,IAAI;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YAChC,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EAAE,GAAG,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;;kFAzBU,iBAAiB;iGAAjB,iBAAiB;;QCX9B,yEACI;QAAA,0EACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,6GACI;QAMJ,6EACI;QAD+B,0RAAY,oBAAoB,IAAC;QAChE,gEACA;QAAA,yEACI;QAAA,2EAAuD;QAAA,sEAAW;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAE5G,0EACI;QAAA,2EAIA;QAAA,gHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAsD;QAAA,sEAAU;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAE1G,0EACI;QAAA,4EAKA;QAAA,gHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqD;QAAA,yEAAa;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAE5G,0EACI;QAAA,4EAIA;QAAA,gHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqD;QAAA,qEAAS;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAExG,2EACI;QAAA,4EAIA;QAAA,wFAAwE;QACxE,uFAAyC;QAEzC,gHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAA6D;QAAA,6EAAiB;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAExH,2EACI;QAAA,oFAEA;QAAA;QAAA,4DAAW;QAEX,gHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,8EACI;QAAA,gFAA0B;QAAA,gEAAI;QAAA,4DAAW;QAAC,iEAC9C;QAAA,4DAAS;QACT,8EACI;QAD+B,0IAAS,aAAS,IAAC;QAClD,gFAA0B;QAAA,iEAAK;QAAA,4DAAW;QAAC,mEAC/C;QAAA,4DAAS;QAEb,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAGX,4DAAM;;;;;;;;;QA5GG,0DAA0B;QAA1B,uHAA0B;QAa2F,2DAEzE;QAFyE,iMAEzE;QAEhC,0DAAmE;QAAnE,2GAAmE;QAapE,0DAA+G;QAA/G,iMAA+G;QAI9G,0DAAgE;QAAhE,2GAAgE;QAajE,0DAA2G;QAA3G,iMAA2G;QAG1G,0DAA6D;QAA7D,2GAA6D;QAa9D,0DAA2G;QAA3G,iMAA2G;QAG9E,0DAAc;QAAd,oEAAc;QAG1C,0DAA6D;QAA7D,2GAA6D;QAa9D,0DAA2I;QAA3I,qMAA2I;QAG1I,0DAAqF;QAArF,8GAAqF;QAU9C,0DAA2B;QAA3B,gFAA2B;QACzD,0DAAe;QAAf,wEAAe;QAGf,0DAAe;QAAf,wEAAe;;6FD7FhC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;ICMrD,yEACI;IAAA,yEAAQ;IAAA,uEAAY;IAAA,4DAAS;IAAC,8EAC9B;IAAA,4EACI;IAAA,0EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;;ADAH,MAAM,oBAAoB;IAM/B,YAAoB,YAA0B,EAAS,SAA6C;QAAhF,iBAAY,GAAZ,YAAY,CAAc;QAAS,cAAS,GAAT,SAAS,CAAoC;IAAI,CAAC;IAEzG,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QACnD,kCAAkC;IACpC,CAAC;IAED,MAAM;QACJ,WAAW;QACX,kCAAkC;QAClC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;YACN,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;wFA5BU,oBAAoB;oGAApB,oBAAoB;QCXjC,yEACI;QAAA,yEACJ;QAAA,4DAAM;QAEN,yEAEI;QAAA,gHACI;QAMJ,qEACI;QAAA,wGACJ;QAAA,4DAAK;QAEL,sEACI;QAAA,4EAA+C;QAAnB,4IAAS,YAAQ,IAAC;QAAC,8DAAG;QAAA,4DAAS;QAC3D,4EAAuD;QAApB,4IAAS,aAAS,IAAC;QAAC,8DAAE;QAAA,4DAAS;QACtE,4DAAM;QACV,4DAAM;;QAfG,0DAA0B;QAA1B,uHAA0B;;6FDKtB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;4MAGU,YAAY;kBAApB,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,SAAS;IAEpB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAC1B,IAAI,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;YAC7C,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;;kEAZU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,YAAY;IAIvB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHlC,UAAK,GAAG,kBAAkB,CAAC;QAC3B,eAAU,GAAY,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAE5C,CAAC;IACrC,QAAQ;QACN;;;;;;YAMI;IACN,CAAC;IAID,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;;wEApBU,YAAY;4FAAZ,YAAY;QCAzB,2EAA+B;;6FDAlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACG;AACY;AACQ;AACe;AAChC;AACO;AACE;AACd;AAEK;AACwB;AACN;AACQ;AACS;AACtB;AACN;AACE;AACV;AACoC;AACH;AACG;AACM;;;;AAmCjF,MAAM,SAAS;;wFAAT,SAAS,cAHR,4DAAY;4IAGb,SAAS,mBART;QACT,mEAAW;QACX,qEAAY;QACZ,2DAAS;KACV,YAhBQ;YACP,uEAAa;YACb,qEAAgB;YAChB,0DAAW;YACX,oEAAgB;YAChB,4DAAY,CAAC,OAAO,CAAC,0DAAM,CAAC;YAC5B,4FAAuB;YACvB,yEAAc;YACd,mEAAgB;YAChB,qEAAmB;YACnB,uDAAY,CAAC,OAAO,EAAE;SACvB;mIASU,SAAS,mBA9BlB,4DAAY;QACZ,oFAAe;QACf,8EAAa;QACb,sFAAc;QACd,+FAAiB;QACjB,+FAAkB;QAClB,4FAAiB;QACjB,+FAAkB;QAClB,qGAAoB,aAGpB,uEAAa;QACb,qEAAgB;QAChB,0DAAW;QACX,oEAAgB,gEAEhB,4FAAuB;QACvB,yEAAc;QACd,mEAAgB;QAChB,qEAAmB;6FAWV,SAAS;cAhCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,oFAAe;oBACf,8EAAa;oBACb,sFAAc;oBACd,+FAAiB;oBACjB,+FAAkB;oBAClB,4FAAiB;oBACjB,+FAAkB;oBAClB,qGAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,0DAAW;oBACX,oEAAgB;oBAChB,4DAAY,CAAC,OAAO,CAAC,0DAAM,CAAC;oBAC5B,4FAAuB;oBACvB,yEAAc;oBACd,mEAAgB;oBAChB,qEAAmB;oBACnB,uDAAY,CAAC,OAAO,EAAE;iBACvB;gBACD,SAAS,EAAE;oBACT,mEAAW;oBACX,qEAAY;oBACZ,2DAAS;iBACV;gBACD,SAAS,EAAE,CAAC,4DAAY,CAAC;gBACzB,eAAe,EAAE,CAAC,qGAAoB,EAAE,+FAAkB,EAAE,4FAAiB,EAAE,+FAAkB,CAAC;aACnG;;;;;;;;;;;;;;ACzDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAE9B;AACuD;AAId;AACA;AACH;AACS;AACtB;;;;;;;;;;;;ICuBhD,yEACI;IACA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,yEAAgB;IAAA,wEAAiD;IAApB,2UAAmB;IAAC,uDAAe;IAAA,4DAAI;IAAA,4DAAK;IACzF,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAE/B,sEAAI;IAAA,wDAA8B;;IAAA,4DAAK;IACvC,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IACzB,0EACI;IAAA,gFAAsG;IAA5E,mVAAmB;IAAyD,0EAAc;IAAA,4DAAW;IAChI,gFAAsG;IAA5E,mVAAmB;IAAyD,gEAAI;IAAA,4DAAW;IACrH,gFAA0G;IAAhF,qVAAqB;IAA2D,0EAAc;IAAA,4DAAW;IACtI,4DAAK;IAET,4DAAK;;;IAfwB,sEAAU;IAE/B,0DAAiB;IAAjB,+EAAiB;IAC4C,0DAAe;IAAf,6EAAe;IAC5E,0DAAe;IAAf,6EAAe;IACf,0DAAsB;IAAtB,qFAAsB;IAEtB,0DAA8B;IAA9B,yJAA8B;IAC9B,0DAAgB;IAAhB,8EAAgB;IAEN,0DAAe;IAAf,wEAAe;IAChB,0DAAe;IAAf,wEAAe;IACf,0DAAe;IAAf,wEAAe;;AD5BjC,MAAM,eAAe;IAU1B,YAAoB,YAAyB,EAAU,MAAc,EAAU,MAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAW;QANhG,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;IAK4D,CAAC;IAErG,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC1D,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,gBAAgB;YAC5B,UAAU,EAAE,CAAC;YACb,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;YACvB,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI;SAEjB,CAAC;IACJ,CAAC;IAED,KAAK;QACH,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE,YAAY,CAAC;aAC9C,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,MAAM,CAAC,IAAW;QAChB,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC;QAC5B,uCAAuC;QACvC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE,YAAY,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,IAAW;QAChB,WAAW;QACX,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC;QAC5B,uCAAuC;QACvC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE,YAAY,CAAC;aACjD,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,IAAW;QAClB,WAAW;QACX,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE,YAAY,CAAC;aACjD,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAA0B,EAAE,EAAE;YAC5D,0BAA0B;YAC1B,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,uCAAuC;YACvC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;;8EApGU,eAAe;+FAAf,eAAe;kEAOf,qEAAkB;;;;;QCzB/B,iFACI;QAAA,yEACI;QAAA,uEAAM;QAAA,iFAAsB;QAAA,4DAAO;QACnC,4EACI;QADI,uIAAS,YAAQ,IAAC;QACtB,oEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAc;QAEd,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QAEf,yEACI;QAAA,yEACA;QAAA,0EACI;QAAA,2EAA+B;QAAA,yEAAa;QAAA,4DAAO;QACnD,6EACI;QADoB,wIAAS,WAAO,IAAC;QACrC,+EAA2B;QAAA,oEAAQ;QAAA,4DAAW;QAC9C,sEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,gFACI;QAAA,yEACI;QAAA,sEACI;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAEpB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,8GACI;QAeR,4DAAQ;QACZ,4DAAQ;QACR,4DAAM;QACN,4DAAM;;QArCgB,2DAAe;QAAf,wEAAe;QAIkE,0DAAuB;QAAvB,oFAAuB;QAclH,2DAAwB;QAAxB,+EAAwB;;6FDhBvB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;2QASC,SAAS;kBADR,uDAAS;mBAAC,qEAAkB,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;;;;;;;;;;;;;;AEzBhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEkB;AACN;AACE;AACM;AACN;AACI;AACQ;AACN;AACN;;AAEvD,MAAM,SAAS,GAAG;IAChB,wEAAe;IACf,oEAAa;IACb,oEAAa;IACb,0EAAgB;IAChB,oEAAa;IACb,wEAAe;IACf,gFAAmB;IACnB,0EAAmB;IACnB,sEAAc;CACf,CAAC;AAMK,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAHhB,CAAC,SAAS,CAAC,EAZpB,wEAAe;QACf,oEAAa;QACb,oEAAa;QACb,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,gFAAmB;QACnB,0EAAmB;QACnB,sEAAc;mIAOH,cAAc,cAfzB,wEAAe;QACf,oEAAa;QACb,oEAAa;QACb,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,gFAAmB;QACnB,0EAAmB;QACnB,sEAAc,aARd,wEAAe;QACf,oEAAa;QACb,oEAAa;QACb,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,gFAAmB;QACnB,0EAAmB;QACnB,sEAAc;6FAOH,cAAc;cAJ1B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,SAAS,CAAC;gBACpB,OAAO,EAAC,CAAC,SAAS,CAAC;aACpB;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;ICyBzC,sEACI;IAAA,+EACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,wFACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,kHACI;IAEJ,kHACI;IAER,4DAAM;;;;IANG,0DAA6B;IAA7B,qFAA6B;IAG7B,0DAA6B;IAA7B,gHAA6B;;;IAclC,sEACI;IAAA,kFACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,yGACJ;IAAA,4DAAM;;;IANV,yEACI;IAAA,kHACI;IAEJ,kHACI;IAER,4DAAM;;;;IANG,0DAAgC;IAAhC,qFAAgC;IAGhC,0DAAiC;IAAjC,sFAAiC;;;ADlC/C,MAAM,cAAc;IAMzB,YAAoB,WAAwB,EAAU,MAAc,EAAU,MAAqB;QAA/E,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;QAEnG,eAAU,GAAW,wEAAwE,CAAC;IAFS,CAAC;IAIxG,QAAQ;QACN,0BAA0B;IAC5B,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,QAAQ;QAC3B,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,EAAE,QAAQ,CAAC;aACjD,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzB,kCAAkC;YAClC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC/C,CAAC,EACC,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,0BAA0B;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,gCAAgC,CAAC,CAAC;YAC7D,yBAAyB;QAC7B,CAAC,CAAC,CAAC;QACH,WAAW;QACX,yBAAyB;QAEzB,8BAA8B;IAChC,CAAC;;4EAnCU,cAAc;8FAAd,cAAc;;QCZ3B,yEACI;QAKA,6EACI;QADyD,kWAAY,uCAA0C,IAAC;QAUhH,gEACA;QAAA,yEACI;QAAA,2EAAmB;QAAA,gEAAK;QAAA,4DAAQ;QAChC,0EAA0B;QAAA,4DAAC;QAAA,4DAAO;QAClC,yEAKA;QAAA,4GACI;QAOR,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,4EAKA;QAAA,6GACI;QAOR,4DAAM;QACN,8EAAsF;QAAA,iEAAK;QAAA,4DAAS;QACxG,4DAAO;QACX,4DAAM;;;;;QAjC0J,0DAGlJ;QAHkJ,gMAGlJ;QAEG,0DAAuD;QAAvD,2GAAuD;QAa5D,0DAGE;QAHF,gMAGE;QACG,0DAAgE;QAAhE,2GAAgE;QAS/C,0DAA6B;QAA7B,gFAA6B;;6FDvClD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;+PAGC,UAAU;kBADT,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;AAUlD,MAAM,kBAAkB;IAI7B,YAAoB,YAA0B,EAAS,SAA2C;QAA9E,iBAAY,GAAZ,YAAY,CAAc;QAAS,cAAS,GAAT,SAAS,CAAkC;IAAI,CAAC;IAEvG,QAAQ;QACN,+CAA+C;QAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;IACrD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;oFAbU,kBAAkB;kGAAlB,kBAAkB;QCV/B,yEACI;QAAA,0EACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,6EACI;QAAA,yEACI;QAAA,2EAAoD;QAAA,iEAAM;QAAA,4DAAQ;QAClE,yEACI;QAAA,4EACI;QAAA,6EAA6B;QAAA,gEAAI;QAAA,4DAAS;QAC1C,6EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAuD;QAAA,sEAAU;QAAA,4DAAQ;QACzE,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAsD;QAAA,qEAAS;QAAA,4DAAQ;QACvE,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqD;QAAA,wEAAY;QAAA,4DAAQ;QACzE,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqD;QAAA,oEAAQ;QAAA,4DAAQ;QACrE,2EACI;QAAA,wEACA;QAAA,wFAAwE;QACxE,uFAAyC;QAC7C,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAyD;QAAA,4EAAgB;QAAA,4DAAQ;QACjF,2EACI;QAAA,gFACC;QAAA;QAAA,4DAAW;QAChB,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,8EACI;QAD0B,2IAAS,aAAS,IAAC;QAC7C,gFAA0B;QAAA,iEAAK;QAAA,4DAAW;QAAC,kEAAK;QAAA,4DAAS;QACjE,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEX,4DAAM;;;QA5C0E,2DAAgC;QAAhC,6FAAgC;QAOjC,0DAA+B;QAA/B,4FAA+B;QAOhC,0DAA8B;QAA9B,2FAA8B;QAOnD,0DAAwB;QAAxB,8EAAwB;QAChC,0DAAc;QAAd,oEAAc;QAQ+B,0DAAsC;QAAtC,mGAAsC;QAQtG,0DAAe;QAAf,wEAAe;;6FD/ChC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;4MAGU,YAAY;kBAApB,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;ICKrD,0EACI;IAAA,yEAAQ;IAAA,uEAAY;IAAA,4DAAS;IAAC,8EAC9B;IAAA,6EACI;IAAA,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;;;IAsBU,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,sHACI;IAER,4DAAM;;;;IAHG,0DAAiC;IAAjC,qFAAiC;;;IActC,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,sHACI;IAER,4DAAM;;;;IAHG,0DAAgC;IAAhC,qFAAgC;;;IAcrC,sEACI;IAAA,sFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,sHACI;IAER,4DAAM;;;;IAHG,0DAA+B;IAA/B,qFAA+B;;;IAgBpC,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,sHACI;IAER,4DAAM;;;;IAHG,0DAA+B;IAA/B,qFAA+B;;;IAepC,sEACI;IAAA,0FACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,sHACI;IAER,4DAAM;;;;IAHG,0DAAmC;IAAnC,sFAAmC;;;ADhFrD,MAAM,kBAAkB;IAO7B,YAAoB,YAA0B,EAAS,SAA2C;QAA9E,iBAAY,GAAZ,YAAY,CAAc;QAAS,cAAS,GAAT,SAAS,CAAkC;IAAI,CAAC;IAEvG,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QACnD,kCAAkC;QAClC,yCAAyC;IAC3C,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,WAAW;QACX,kCAAkC;QAClC,wCAAwC;QACxC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;YACN,IAAI,CAAC,QAAQ,GAAG,SAAS;QAC7B,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;;oFA/BU,kBAAkB;kGAAlB,kBAAkB;QCX9B,yEACG;QAAA,yEACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,8GACI;QAKP,6EACO;QADmC,8IAAY,cAAU,IAAC;QAC1D,yEACI;QAAA,2EAAoD;QAAA,kEAAO;QAAA,0EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAErG,0EACI;QAAA,iFACI;QAAA,8EAA8B;QAAA,gEAAI;QAAA,4DAAS;QAC3C,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAuD;QAAA,uEAAW;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAE5G,0EACI;QAAA,iFAIA;QAJyG,uMAAoC;QAA7I,4DAIA;QAAA,iHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAsD;QAAA,sEAAU;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAE1G,0EACI;QAAA,iFAEA;QAFqJ,sMAAmC;QAAxL,4DAEA;QAAA,iHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqD;QAAA,yEAAa;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAE5G,0EACI;QAAA,iFAEA;QAF+M,qMAAkC;QAAjP,4DAEA;QAAA,iHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqD;QAAA,qEAAS;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAExG,2EACI;QAAA,iFACA;QADyN,qMAAkC;QAA3P,4DACA;QAAA,wFAAwE;QACxE,uFAAyC;QAEzC,iHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAyD;QAAA,6EAAiB;QAAA,2EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAEpH,2EACI;QAAA,oFACC;QADoP,gNAA0C;QAC9R;QAAA,4DAAW;QAEZ,iHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,8EACI;QAAA,gFAA0B;QAAA,gEAAI;QAAA,4DAAW;QAAC,oEAC9C;QAAA,4DAAS;QACT,8EACI;QAD+B,2IAAS,aAAS,IAAC;QAClD,gFAA0B;QAAA,iEAAK;QAAA,4DAAW;QAAC,mEAC/C;QAAA,4DAAS;QAEb,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEX,4DAAM;QAEN,qEAAG;QAAA,sEAAU;QAAA,4DAAI;;;;;;;;;QA7GR,0DAA0B;QAA1B,uHAA0B;QAsBsF,2DAAoC;QAApC,+FAAoC;QAIxI,0DAAmE;QAAnE,2GAAmE;QAYxD,0DAA+G;QAA/G,iMAA+G;QAE1H,0DAAgE;QAAhE,2GAAgE;QAYrD,0DAA2G;QAA3G,iMAA2G;QAEtH,0DAA6D;QAA7D,2GAA6D;QAYlD,0DAA2G;QAA3G,iMAA2G;QAC1F,0DAAc;QAAd,qEAAc;QAG1C,0DAA6D;QAA7D,2GAA6D;QAY/C,0DAA2H;QAA3H,qMAA2H;QAGzI,0DAAyE;QAAzE,8GAAyE;QAUlC,0DAAkC;QAAlC,gFAAkC;QAChE,0DAAe;QAAf,wEAAe;QAGf,0DAAe;QAAf,wEAAe;;6FD7FhC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;4MAIC,YAAY;kBADX,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAA;AAAA;AAAkF;AACvC;;;AAQpC,MAAM,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF3B,YAAO,GAAG,yBAAyB,CAAC;IAEL,CAAC;IAC3C;;;;;;;;;;MAUE;IACA,gBAAgB,CAAC,IAAU;QACzB,MAAM,IAAI,GAAS;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAED,IAAI,SAAS,GAAG,IAAI,gEAAW,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,kBAAkB,CAAC,KAAK,EAAE,QAAQ;QAChC,IAAI,IAAI,GAAG,WAAW,GAAG,KAAK,GAAG,YAAY,GAAG,QAAQ,GAAG,sBAAsB,CAAC;QAClF,IAAI,SAAS,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,8BAA8B,EAAC,SAAS,EAAC,MAAM,EAAE,CAAC,CAAC;QACrG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAC/E,CAAC;;sEAnCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAK/D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH;AAKM,MAAM,YAAY;IAOvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH3B,YAAO,GAAG,6BAA6B;IAGR,CAAC;IAEzC,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,GAAG,QAAQ,EACnD;YACE,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;aACnE,CAAC;SAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAC3D;YACE,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;aACnE,CAAC;SAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,QAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,EAAE,QAAQ,EAAE;YACtD,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;aACnE,CAAC;SAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,QAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAE;YACtE,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;aACnE,CAAC;SAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,QAAc;QACxB,sCAAsC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAC,QAAQ,CAAC,OAAO,EAAE;YAC/D,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;aACnE,CAAC;SAAC,CAAC,CAAC;IACP,CAAC;IAEA,WAAW;QACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,QAAQ,CAAC;aACnC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,GAAc,CAAC,CAAC;IAC5D,CAAC;;wEAlDU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAET;AACoC;AAEX;AACE;AACS;AACjB;;;AAE1D,MAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,6EAAa;QACvC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qFAAc,EAAC,CAAC;KACnD;IACD;QACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6EAAa;QAC1C,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8FAAiB,EAAC,CAAC;KACtD;IACD;QACE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC;KAErE;IACD;QACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8FAAkB,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC;KAC1E;IACD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAE,SAAS,EAAE,MAAM,EAAC;CACzD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;IC6B9B,sEACI;IAAA,+EACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,wFACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,qHACI;IAEJ,qHACI;IAER,4DAAM;;;;IANG,0DAA6B;IAA7B,qFAA6B;IAG7B,0DAA6B;IAA7B,gHAA6B;;;IAsBlC,sEACI;IAAA,kFACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,yGACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,qHACI;IAEJ,qHACI;IAER,4DAAM;;;;IANG,0DAAgC;IAAhC,qFAAgC;IAGhC,0DAAiC;IAAjC,sFAAiC;;;IAgBtC,sEACI;IAAA,0FACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,qHACI;IAEJ,qHACI;IAER,4DAAM;;;;IANG,0DAAuC;IAAvC,qFAAuC;IAGvC,0DAAuC;IAAvC,qFAAuC;;;ADnEzD,MAAM,iBAAiB;IAM5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,UAAU,CAAC,QAAQ;QACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG;YACV,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ;YACjC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC3B,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ;YACjC,eAAe,EAAE,QAAQ,CAAC,KAAK,CAAC,eAAe;YAC/C,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC/B,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK;SAC/B;QACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC9D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EAAE,CAAC,KAAwB,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;QAClC,CAAC,CAAC;IACJ,CAAC;;kFA5BU,iBAAiB;iGAAjB,iBAAiB;;QCV9B,yEACI;QAAA,yEACI;QAAA,yEAAQ;QAAA,uEAAY;QAAA,4DAAS;QAAC,sEAC9B;QAAA,4EACI;QAAA,0EAAyB;QAAA,iEAAO;QAAA,4DAAO;QAC3C,4DAAS;QACb,4DAAM;QACN,6EACI;QADoC,0RAAY,mBAAwB,IAAC;QACzE,iEACA;QAAA,0EACI;QAAA,0EACI;QAAA,4EAAmB;QAAA,sEAAU;QAAA,4DAAQ;QACrC,2EACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,6EAAmB;QAAA,qEAAS;QAAA,4DAAQ;QACpC,4EACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,4EAKA;QAAA,gHACI;QAQR,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,+EAAmB;QAAA,4DAAQ;QACjD,4EACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,4EAMA;QAAA,gHACI;QAOR,4DAAM;QAEN,0EACI;QAAA,6EAA6B;QAAA,4EAAgB;QAAA,4DAAQ;QACrD,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,4EAMA;QAAA,gHACI;QAOR,4DAAM;QACV,4DAAM;QACN,8EAAyF;QAAA,oEAAQ;QAAA,4DAAS;QAC9G,4DAAO;QACX,4DAAM;;;;;;QApFG,0DAA8B;QAA9B,4HAA8B;QAuB6H,2DAGtJ;QAHsJ,gMAGtJ;QAEO,0DAAuD;QAAvD,2GAAuD;QAoB5D,2DAGE;QAHF,iMAGE;QAEG,0DAAgE;QAAhE,2GAAgE;QAcrE,0DAGE;QAHF,iMAGE;QAEG,0DAAqF;QAArF,2GAAqF;QAUxE,0DAAgC;QAAhC,gFAAgC;;6FDzErD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;;;;;;;;;ICUvD,uEAA4D;;;IAG5D,0EAAkE;;ADF/E,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCX1B,iFACI;QAAA,yEACI;QAAA,uEAAM;QAAA,iFAAsB;QAAA,4DAAO;QACvC,4DAAM;QACV,4DAAc;QAEd,yEACI;QAAA,8EACQ;QAAA,sFACI;QAAA,gFACI;QAAA,uHAAgD;QACpD,4DAAU;QACV,kFACI;QAAA,6HAAmD;QACvD,4DAAU;QACd,4DAAgB;QACxB,4DAAW;QACf,4DAAM;;;QAPyB,2DAAoC;QAApC,yFAAoC;QAGjC,0DAAoC;QAApC,yFAAoC;;6FDFzD,aAAa;cANzB,uDAAS;eAAC;gBACT,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { Quote } from 'src/app/models/Quote/quote.model';\nimport { QuoteService } from 'src/app/services/quote.service';\n\n@Component({\n  selector: 'app-add-quote',\n  templateUrl: './add-quote.component.html',\n  styleUrls: ['./add-quote.component.css']\n})\nexport class AddQuoteComponent implements OnInit {\n\n  successMsg: string;\n  newQuote: Quote;\n  constructor(private quoteService: QuoteService, public dialogRef: MatDialogRef<AddQuoteComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  addNewQuote(item) {\n    console.log(item.value);\n    this.newQuote = item.value;\n    this.quoteService.addNewQuote(this.newQuote).subscribe(res => {\n      this.successMsg = \"Success\";\n      this.quoteService.refreshList();\n      setTimeout(() => {\n        this.onClose();\n      }, 5000);\n    }, err => {\n        console.log(err);\n    })\n  }\n\n}\n","<div class=\"task-header\">\n    Add New Task\n</div>\n\n<div class=\"container mt-4\">\n    <div *ngIf=\"successMsg?.length\" class=\"alert alert-success alert-dismissible fade show m-2\" role=\"alert\">\n        <strong>Successfully</strong> added new task.\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <form #addForm=\"ngForm\" novalidate (ngSubmit)=\"addNewQuote(addForm)\" >\n        <br>\n        <div class=\"form-group row\">\n            <label for=\"quoteType\" class=\"col-sm-2 col-form-label\">Quote Type <span class=\"text-danger\">*</span></label>\n        \n            <div class=\"col-sm-6\">\n                <input #quoteType=\"ngModel\" name=\"quoteType\" type=\"text\" class=\"form-control\" id=\"quoteType\" required ngModel [ngClass]=\"{\n                        'is-invalid': quoteType.invalid && (quoteType.dirty || quoteType.touched),\n                        'is-valid': quoteType.valid}\">\n        \n                <div *ngIf=\"quoteType.invalid && (quoteType.dirty || quoteType.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"quoteType.errors.required\">\n                        Quote Type is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"taskType\" class=\"col-sm-2 col-form-label\">Task Type <span class=\"text-danger\">*</span></label>\n        \n            <div class=\"col-sm-6\">\n                <input required\n                    [ngClass]=\"{'is-invalid': taskType.invalid && (taskType.dirty || taskType.touched),'is-valid': taskType.valid}\"\n                    #taskType=\"ngModel\" ngModel name=\"taskType\" type=\"text\" class=\"form-control\"\n                    id=\"taskType\">\n        \n                <div *ngIf=\"taskType.invalid && (taskType.dirty || taskType.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"taskType.errors.required\">\n                        Task Type is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"contact\" class=\"col-sm-2 col-form-label\">Contact Name <span class=\"text-danger\">*</span></label>\n        \n            <div class=\"col-sm-6\">\n                <input required\n                    [ngClass]=\"{'is-invalid': contact.invalid && (contact.dirty || contact.touched),'is-valid': contact.valid}\"\n                    #contact=\"ngModel\" name=\"contact\" type=\"text\" class=\"form-control\" id=\"contact\" ngModel>\n        \n                <div *ngIf=\"contact.invalid && (contact.dirty || contact.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"contact.errors.required\">\n                        Contact Name is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group   row\">\n            <label for=\"duedate\" class=\"col-sm-2 col-form-label\">Due Date <span class=\"text-danger\">*</span></label>\n        \n            <div class=\"col-sm-6 form-inline\">\n                <input required\n                    [ngClass]=\"{'is-invalid': duedate.invalid && (duedate.dirty || duedate.touched),'is-valid': duedate.valid}\"\n                    class=\"form-control\" id=\"duedate\" [matDatepicker]=\"picker\" #duedate=\"ngModel\" name=\"duedate\"\n                    ngModel>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n        \n                <div *ngIf=\"duedate.invalid && (duedate.dirty || duedate.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"duedate.errors.required\">\n                        Date Name is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"taskDescription\" class=\"col-sm-2 col-form-label\">Task Description <span class=\"text-danger\">*</span></label>\n        \n            <div class=\"col-sm-9\">\n                <textarea required\n                    [ngClass]=\"{'is-invalid': taskDescription.invalid && (taskDescription.dirty || taskDescription.touched),'is-valid': taskDescription.valid}\" class=\"form-control\" id=\"taskDescription\" rows=\"5\" #taskDescription=\"ngModel\" name=\"taskDescription\" ngModel>\n                </textarea>\n        \n                <div *ngIf=\"taskDescription.invalid && (taskDescription.dirty || taskDescription.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"taskDescription.errors.required\">\n                        Task Description is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-3 offset-9\">\n                <button type=\"submit\" class=\"btn close-btn\" [disabled]=\"!addForm.valid\">\n                    <mat-icon [inline]=\"true\">save</mat-icon> Add\n                </button>\n                <button class=\"btn close-btn ml-1\" (click)=\"onClose()\" type=\"button\">\n                    <mat-icon [inline]=\"true\">close</mat-icon> Close\n                </button>\n        \n            </div>\n        </div>\n\n    </form>\n\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { Quote } from 'src/app/models/Quote/quote.model';\nimport { QuoteService } from 'src/app/services/quote.service';\n\n@Component({\n  selector: 'app-delete-quote',\n  templateUrl: './delete-quote.component.html',\n  styleUrls: ['./delete-quote.component.css']\n})\nexport class DeleteQuoteComponent implements OnInit {\n  \n  @Input() currentQuote: Quote;\n  successMsg: string;\n  errorMsg: string;\n\n  constructor(private quoteService: QuoteService, public dialogRef: MatDialogRef<DeleteQuoteComponent>) { }\n\n  ngOnInit(): void {\n    this.currentQuote = this.quoteService.currentQuote;\n    // console.log(this.currentQuote);\n  }\n\n  Delete() {\n    // debugger\n    // console.log(this.currentQuote);\n    this.quoteService.deleteQuote(this.currentQuote).subscribe(res => {\n      this.successMsg = \"Success\";\n      setTimeout(() => {\n        this.onClose();\n      }, 5000);\n    }, (err => {\n        this.errorMsg = \"Failure\";\n    }))\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"task-header\">\n    Delete Task\n</div>\n\n<div class=\"container\">\n\n    <div *ngIf=\"successMsg?.length\" class=\"alert alert-success alert-dismissible fade show m-2\" role=\"alert\">\n        <strong>Successfully</strong> deleted the task.\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <h4>\n        Are you sure, you want to delete this task?\n    </h4>\n\n    <div>\n        <button class=\"btn del-btn\" (click)=\"Delete()\">Yes</button>\n        <button class=\"btn close-btn ml-1\" (click)=\"onClose()\">No</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('userToken') != null) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'TaskManagementUI';\n  isLoggedIn: boolean = localStorage.getItem('userToken') === null ? true : false;\n\n  constructor(private router: Router){}\n  ngOnInit() {\n    /* if (localStorage.getItem('userToken') === null) {\n      console.log('null');\n      this.isLoggedIn = true;\n    } else {\n      console.log('not null');\n      this.isLoggedIn = false;\n    } */\n  }\n\n  \n\n  logout() {\n    localStorage.removeItem('userToken');\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- <mat-toolbar color=\"primary\">\r\n    <div class=\"container d-flex justify-content-between\">\r\n        <span>Task Management System</span>\r\n        <button [hidden]=\"isLoggedIn\" (click)=\"Logout()\" mat-flat-button color=\"primary\">\r\n            Log Out\r\n        </button>\r\n    </div>\r\n</mat-toolbar> -->\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule, routes } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ValidateEqualModule } from 'ng-validate-equal';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { QuotesComponent } from './components/quotes/quotes.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { MaterialModule } from './material/material.module';\nimport { UserService } from './services/user.service';\nimport { QuoteService } from './services/quote.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { QuoteItemComponent } from './components/quote-item/quote-item.component';\nimport { AddQuoteComponent } from './components/add-quote/add-quote.component';\nimport { EditQuoteComponent } from './components/edit-quote/edit-quote.component';\nimport { DeleteQuoteComponent } from './components/delete-quote/delete-quote.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuotesComponent,\n    UserComponent,\n    LoginComponent,\n    RegisterComponent,\n    QuoteItemComponent,\n    AddQuoteComponent,\n    EditQuoteComponent,\n    DeleteQuoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n    MaterialModule,\n    DataTablesModule,\n    ValidateEqualModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    UserService,\n    QuoteService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [DeleteQuoteComponent, EditQuoteComponent, AddQuoteComponent, QuoteItemComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { MatDialog, MatDialogConfig, _MatDialogBase } from '@angular/material/dialog';\n\nimport { QuoteService } from 'src/app/services/quote.service';\nimport { Quote } from '../../models/Quote/quote.model';\nimport { QuoteItemComponent } from '../quote-item/quote-item.component';\nimport { EditQuoteComponent } from '../edit-quote/edit-quote.component';\nimport { AddQuoteComponent } from '../add-quote/add-quote.component';\nimport { DeleteQuoteComponent } from '../delete-quote/delete-quote.component';\nimport { DataTableDirective } from 'angular-datatables';\n\n@Component({\n  selector: 'app-quotes',\n  templateUrl: './quotes.component.html',\n  styleUrls: ['./quotes.component.css']\n})\nexport class QuotesComponent implements OnInit {\n\n  quotes: Quote[];\n  userQuotes: Quote[];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  @ViewChild(DataTableDirective, {static: false})\n  dtElement: DataTableDirective;\n\n  constructor(private quoteService:QuoteService, private router: Router, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.quoteService.getQuoteList().subscribe(quotes => {\n      this.quotes = quotes;\n      this.dtTrigger.next();\n    });\n\n    this.quoteService.getUserQuoteList().subscribe(userquotes => {\n      this.userQuotes = userquotes;\n    });\n\n    this.dtOptions = {\n      pagingType: 'simple_numbers',\n      pageLength: 5,\n      lengthMenu: [5, 10, 25],\n      processing: true,\n      responsive: true,\n      \n    };\n  }\n\n  onAdd() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '100%';\n    this.dialog.open(AddQuoteComponent, dialogConfig)\n      .afterClosed().subscribe(result => {\n        console.log(`Dialog result: added`);\n        this.rerender();\n    });\n    \n  }\n\n  onView(item: Quote) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '100%';\n    // console.log('id = ' + item.QuoteId);\n    this.quoteService.currentQuote = item;\n    this.dialog.open(QuoteItemComponent, dialogConfig);\n  }\n\n  onEdit(item: Quote) {\n    // debugger\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '100%';\n    // console.log('id = ' + item.QuoteId);\n    this.quoteService.currentQuote = item;\n    this.dialog.open(EditQuoteComponent, dialogConfig)\n    .afterClosed().subscribe(result => {\n        console.log(`Dialog result: Updated`);\n        this.rerender();\n    });\n  }\n\n  onDelete(item: Quote) {\n    // debugger\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '50%';\n    this.quoteService.currentQuote = item;\n    this.dialog.open(DeleteQuoteComponent, dialogConfig)\n      .afterClosed().subscribe(() => {\n        console.log(`Dialog result: Closed`);\n        this.rerender();\n    });\n  }\n\n  Logout() {\n    localStorage.removeItem('userToken');\n    this.router.navigate(['/login']);\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"container d-flex justify-content-between\">\n        <span>Task Management System</span>\n        <button (click)=\"Logout()\"  mat-flat-button color=\"primary\">\n            Log Out\n        </button>\n    </div>\n</mat-toolbar>\n\n<h1>Quotes</h1>\n\n<div class=\"container tasks-container\">\n    <div class=\"\">\n    <div class=\"tableTitle\">\n        <span class=\"font-weight-bold\">Tasks Details</span>\n        <button class=\"add-btn\" (click)=\"onAdd()\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Add New Quote\">\n            <mat-icon [inline]=\"true\" >note_add</mat-icon>\n            Add Task\n        </button>\n    </div>\n<table #quoteTable class=\"table table-hover table-responsive compact cell-border quoteTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\n    <thead>\n        <tr>\n            <th>Quote Type</th>\n            <th>No.</th>\n            <th>Contact</th>\n            <th>Task</th>\n            <th>Due Date</th>\n            <th>Task Type</th>\n            <th>Actions</th>\n            <!-- <th>User ID</th> -->\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let q of quotes\" [item]=\"q\"> \n            <!--  (click)=\"onView(q)\" on tr -->\n            <td>{{ q.QuoteType }}</td>\n            <td scope=\"row\"><a href=\"javascript:void(0)\" (click)=\"onView(q)\">{{ q.QuoteId }}</a></td>\n            <td>{{ q.Contact }}</td>\n            <td>{{ q.TaskDescription}}</td> \n            <!-- (q.TaskDescription | slice:0:100)+'...' -->\n            <td>{{ q.DueDate | date:'short' }}</td>\n            <td>{{ q.TaskType }}</td>\n            <td class=\"p-2 d-flex justify-content-between action-links\">\n                <mat-icon [inline]=\"true\" (click)=\"onView(q)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"View\">remove_red_eye</mat-icon>\n               <mat-icon [inline]=\"true\" (click)=\"onEdit(q)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">edit</mat-icon>\n               <mat-icon [inline]=\"true\" (click)=\"onDelete(q)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\">delete_outline</mat-icon>\n            </td>\n            <!-- <td>{{ q.UserId }}</td> -->\n        </tr>\n    </tbody>\n</table>\n</div>\n</div>\n\n","import { NgModule } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatTableModule} from '@angular/material/table';\n\nconst materials = [\n  MatButtonModule,\n  MatTabsModule,\n  MatCardModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatDialogModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTableModule\n];\n\n@NgModule({\n  imports: [materials],\n  exports:[materials]\n})\nexport class MaterialModule { }\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @Input()\n  LoginError: string;\n  public errorMsg;\n  showError: boolean;\n\n  constructor(private userService: UserService, private router: Router, private toastr: ToastrService) { }\n\n  emailRegex: string = \"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\";\n\n  ngOnInit(): void {\n    // console.log(loginForm);\n  }\n\n  onLoginSubmit(email, password) {\n    this.userService.userAuthentication(email, password)\n      .subscribe((data: any) => {\n      // console.log(data.access_token);\n      localStorage.setItem('userToken', data.access_token);\n        this.router.navigate(['/quotes']);\n        this.showError = false;\n        this.toastr.success('Succesful', 'Login!');\n    },\n      (error) => {\n        this.LoginError = error.error.error_description;\n        console.log(this.LoginError);\n        this.showError = true;\n        // alert(this.LoginError);\n        this.toastr.error('Error', 'Email or Password is incorrect');\n        // this.errorMsg = error;\n    });\n    // debugger\n    // this.showError = true;\n    \n    // console.log(this.showError)\n  }\n\n}\n","<div class=\"container\">\n    <!-- <div *ngIf=LoginError class=\"text-danger center is-error\"> \n        Incorrect email or password\n    </div> -->\n\n    \n    <form #loginForm=\"ngForm\" novalidate class=\"needs-validation\"(ngSubmit)=\"onLoginSubmit(email.value, password.value)\" >\n        <!-- <div [hidden]=\"!showError\" class=\"alert alert-danger alert-dismissible fade show m-2\" role=\"alert\">\n            Incorrect email or password\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div> -->\n        <!-- <div [hidden]=\"!showError\">\n            error\n        </div> -->\n        <br>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <span class=\"text-danger\">*</span>\n            <input type=\"email\" #email=\"ngModel\" ngModel name=\"email\" class=\"form-control\" id=\"email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"[ngClass]=\"{\n                'is-invalid': email.invalid && (email.dirty || email.touched),\n                'is-valid': email.valid\n            }\">\n\n            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"invalid-feedback\">\n                <div *ngIf=\"email.errors.required\">\n                    Email is required.\n                </div>\n                <div *ngIf=\"email.errors?.pattern\">\n                    Please enater a valid email\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <span class=\"text-danger\">*</span>\n            <input type=\"password\" #password=\"ngModel\" ngModel name=\"Password\" class=\"form-control\" id=\"password\" required minlength=\"6\" \n            [ngClass]=\"{\n                'is-invalid': password.invalid && (password.dirty || password.touched),\n                'is-valid': password.valid\n            }\">\n            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"text-danger\">\n                <div *ngIf=\"password.errors.required\" >\n                    Password is required.\n                </div>\n                <div *ngIf=\"password.errors.minlength\">\n                    Password must be at least 6 characters long.\n                </div>\n            </div>\n        </div>\n        <button mat-raised-button [disabled]=\"!loginForm.valid\" type=\"submit\" color=\"primary\">Login</button>\n    </form>\n</div>\n\n\n\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Quote } from 'src/app/models/Quote/quote.model';\nimport { QuoteService } from 'src/app/services/quote.service';\n\n@Component({\n  selector: 'app-quote-item',\n  templateUrl: './quote-item.component.html',\n  styleUrls: ['./quote-item.component.css']\n})\nexport class QuoteItemComponent implements OnInit {\n\n  @Input() currentQuote : Quote;\n\n  constructor(private quoteService: QuoteService, public dialogRef: MatDialogRef<QuoteItemComponent>) { }\n\n  ngOnInit(): void {\n    // console.log(this.quoteService.currentQuote);\n    this.currentQuote = this.quoteService.currentQuote;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"task-header\">\n    Task Details\n</div>\n\n<div class=\"container mt-4\">\n    <form action=\"\" #viewTaskForm>\n        <div class=\"form-group row\">\n            <label for=\"status\" class=\"col-sm-2 col-form-label\">Status</label>\n            <div class=\"col-sm-6\">\n                <select id=\"inputStatus\" class=\"form-control\">\n                    <option value=\"open\" default>Open</option>\n                    <option value=\"close\">Close</option>\n                </select>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"quoteType\" class=\"col-sm-2 col-form-label\">Quote Type</label>\n            <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" id=\"quoteType\" readonly [value]=\"currentQuote.QuoteType\">\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"taskType\" class=\"col-sm-2 col-form-label\">Task Type</label>\n            <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" id=\"taskType\" readonly [value]=\"currentQuote.TaskType\">\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"contact\" class=\"col-sm-2 col-form-label\">Contact Name</label>\n            <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" id=\"contact\" readonly [value]=\"currentQuote.Contact\">\n            </div>\n        </div>\n\n        <div class=\"form-group   row\">\n            <label for=\"duedate\" class=\"col-sm-2 col-form-label\">Due Date</label>\n            <div class=\"col-sm-6 form-inline\">\n                <input class=\"form-control\" id=\"duedate\" [matDatepicker]=\"picker\" readonly [value]=\"currentQuote.DueDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"description\" class=\"col-sm-2 col-form-label\">Task Description</label>\n            <div class=\"col-sm-9\">\n                <textarea type=\"text\" class=\"form-control\" id=\"description\" rows=\"5\" readonly [value]=\"currentQuote.TaskDescription\">\n                 </textarea>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-3 offset-9\">\n                <button class=\"btn close-btn\" (click)=\"onClose()\">\n                    <mat-icon [inline]=\"true\">close</mat-icon> Close</button>\n            </div>\n        </div>\n\n    </form>\n    \n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { Quote } from 'src/app/models/Quote/quote.model';\nimport { QuoteService } from 'src/app/services/quote.service';\n\n@Component({\n  selector: 'app-edit-quote',\n  templateUrl: './edit-quote.component.html',\n  styleUrls: ['./edit-quote.component.css']\n})\nexport class EditQuoteComponent implements OnInit {\n\n  @Input() \n  currentQuote: Quote;\n  successmsg: string;\n  errormsg: string;\n\n  constructor(private quoteService: QuoteService, public dialogRef: MatDialogRef<EditQuoteComponent>) { }\n\n  ngOnInit(): void {\n    this.currentQuote = this.quoteService.currentQuote;\n    // console.log(this.currentQuote);\n    // console.log(this.currentQuote.QuoteId)\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onUpdate() {\n    // debugger\n    // console.log(this.currentQuote);\n    // console.log(typeof this.currentQuote)\n    this.quoteService.updateQuote(this.currentQuote).subscribe(res => {\n      this.successmsg = \"Success\";\n      setTimeout(() => {\n        this.onClose();\n      }, 3000);\n    }, (err => {\n        this.errormsg = \"Failure\"\n    }));\n  }\n\n}\n"," <div class=\"task-header\">\n    Update Task\n</div>\n\n<div class=\"container mt-4\">\n    <div *ngIf=\"successmsg?.length\"  class=\"alert alert-success alert-dismissible fade show m-2\" role=\"alert\">\n        <strong>Successfully</strong> updated the task.\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n <form #updateTaskForm=\"ngForm\" novalidate (ngSubmit)=\"onUpdate()\">\n        <div class=\"form-group row\">\n            <label for=\"status\" class=\"col-sm-2 col-form-label\">Status <span class=\"text-danger\">*</span></label>\n            \n            <div class=\"col-sm-6\">\n                <select id=\"inputStatus\" class=\"form-control\"  name=\"status\" #status>\n                    <option value=\"open\" selected>Open</option>\n                    <option value=\"close\">Close</option>\n                </select>\n            </div>\n        </div>\n \n        <div class=\"form-group row\">\n            <label for=\"quoteType\" class=\"col-sm-2 col-form-label\">Quote Type <span class=\"text-danger\">*</span></label>\n           \n            <div class=\"col-sm-6\">\n                <input   #quoteType=\"ngModel\" name=\"quoteType\" type=\"text\" class=\"form-control\" id=\"quoteType\" required  [(ngModel)]=\"currentQuote.QuoteType\" [ngClass]=\"{\n                'is-invalid': quoteType.invalid && (quoteType.dirty || quoteType.touched),\n                'is-valid': quoteType.valid}\" >\n                \n                <div *ngIf=\"quoteType.invalid && (quoteType.dirty || quoteType.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"quoteType.errors.required\">\n                        Quote Type is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"taskType\" class=\"col-sm-2 col-form-label\">Task Type <span class=\"text-danger\">*</span></label>\n            \n            <div class=\"col-sm-6\">\n                <input required [ngClass]=\"{'is-invalid': taskType.invalid && (taskType.dirty || taskType.touched),'is-valid': taskType.valid}\"  #taskType=\"ngModel\" [(ngModel)]=\"currentQuote.TaskType\" name=\"taskType\" type=\"text\" class=\"form-control\" id=\"taskType\">\n\n                <div *ngIf=\"taskType.invalid && (taskType.dirty || taskType.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"taskType.errors.required\">\n                        Task Type is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"contact\" class=\"col-sm-2 col-form-label\">Contact Name <span class=\"text-danger\">*</span></label>\n            \n            <div class=\"col-sm-6\">\n                <input required [ngClass]=\"{'is-invalid': contact.invalid && (contact.dirty || contact.touched),'is-valid': contact.valid}\"  #contact=\"ngModel\" name=\"contact\" type=\"text\" class=\"form-control\" id=\"contact\"   [(ngModel)]=\"currentQuote.Contact\">\n\n                <div *ngIf=\"contact.invalid && (contact.dirty || contact.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"contact.errors.required\">\n                        Contact Name is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group   row\">\n            <label for=\"duedate\" class=\"col-sm-2 col-form-label\">Due Date <span class=\"text-danger\">*</span></label>\n            \n            <div class=\"col-sm-6 form-inline\">\n                <input required [ngClass]=\"{'is-invalid': duedate.invalid && (duedate.dirty || duedate.touched),'is-valid': duedate.valid}\" class=\"form-control\" id=\"duedate\" [matDatepicker]=\"picker\" #duedate=\"ngModel\" name=\"duedate\" [(ngModel)]=\"currentQuote.DueDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n\n                <div *ngIf=\"duedate.invalid && (duedate.dirty || duedate.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"duedate.errors.required\">\n                        Date Name is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"description\" class=\"col-sm-2 col-form-label\">Task Description <span class=\"text-danger\">*</span></label>\n            \n            <div class=\"col-sm-9\">\n                <textarea required [ngClass]=\"{'is-invalid': description.invalid && (description.dirty || description.touched),'is-valid': description.valid}\" type=\"text\" class=\"form-control\" id=\"description\" rows=\"5\"  #description=\"ngModel\" name=\"description\" [(ngModel)]=\"currentQuote.TaskDescription\">\n                 </textarea>\n\n                <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"description.errors.required\">\n                        Task Description is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-3 offset-9\">\n                <button type=\"submit\" class=\"btn close-btn\" [disabled]=\"!updateTaskForm.valid\" >\n                    <mat-icon [inline]=\"true\">save</mat-icon> Update\n                </button>\n                <button class=\"btn close-btn ml-1\" (click)=\"onClose()\" type=\"button\">\n                    <mat-icon [inline]=\"true\">close</mat-icon> Close\n                </button>\n                \n            </div>\n        </div>\n\n    </form> \n\n</div> \n\n<p>edit works</p>","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError  } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { User } from '../models/User/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  readonly rootURL = \"https://localhost:44360\";\n\n  constructor(private http: HttpClient) { }\n/* \nconst body: User = {\n      UserName: user.UserName,\n      Password: user.Password,\n      Email: user.Email,\n      FirstName: user.FirstName,\n      LastName: user.LastName\n    }\n    var reqHeader = new HttpHeaders({'No-Auth':'True'});\n    return this.http.post(this.rootUrl + '/api/User/Register', body,{headers : reqHeader});\n*/\n  userRegistration(user: User) {\n    const body: User = {\n      UserName: user.UserName,\n      Password: user.Password,\n      ConfirmPassword: user.ConfirmPassword,\n      Email: user.Email,\n      FirstName: user.FirstName,\n      LastName: user.LastName\n    }\n\n    var reqHeader = new HttpHeaders({ 'No-Auth': 'True' });\n\n    return this.http.post(this.rootURL + '/api/Account/Register', body, { headers: reqHeader });\n  }\n\n  userAuthentication(email, password) {\n    var data = \"UserName=\" + email + \"&password=\" + password + \"&grant_type=password\";\n    var reqHeader = new HttpHeaders({ 'Content-Type': 'application/x-www-urlencoded','No-Auth':'True' });\n    return this.http.post(this.rootURL + '/token', data, { headers: reqHeader });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Quote } from '../models/Quote/quote.model'\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuoteService {\n\n  formData: Quote;\n  quoteList: Quote[];\n  readonly rootURL = \"https://localhost:44360/api\"\n  currentQuote: Quote;\n\n  constructor(private http: HttpClient) { }\n\n  getQuoteList():Observable<Quote[]> {\n    return this.http.get<Quote[]>(this.rootURL + '/Quote',\n      {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n    })});\n  }\n\n  getUserQuoteList():Observable<Quote[]> {\n    return this.http.get<Quote[]>(this.rootURL + '/QuotesperUser',\n      {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n    })});\n  }\n\n  addNewQuote(formData: Quote):Observable<any> {\n    return this.http.post(this.rootURL + '/Quote/', formData, {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n    })});\n  }\n\n  updateQuote(formData: Quote):Observable<any> {\n    return this.http.put(this.rootURL + '/Quote/'+formData.QuoteId, formData, {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n    })});\n  }\n\n  deleteQuote(formData:Quote): Observable<any>{\n    // console.log('id:'+formData.QuoteId)\n    return this.http.delete(this.rootURL + '/Quote/'+formData.QuoteId, {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n    })});\n  }\n\n   refreshList(){\n    this.http.get(this.rootURL+'/Quote')\n    .toPromise().then(res => this.quoteList = res as Quote[]);\n  }\n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { QuoteItemComponent } from './components/quote-item/quote-item.component';\n\nimport { QuotesComponent } from './components/quotes/quotes.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { UserComponent } from './components/user/user.component';\n\nexport const routes: Routes = [\n  {\n    path: 'login', component: UserComponent,\n    children: [{ path: '', component: LoginComponent}]\n  },\n  {\n    path: 'register', component: UserComponent,\n    children: [{ path: '', component: RegisterComponent}]\n  },\n  {\n    path: 'quotes', component: QuotesComponent, canActivate: [AuthGuard],\n    \n  },\n  {\n    path: 'addQuote', component: QuoteItemComponent, canActivate: [AuthGuard]\n  },\n  { path: '', component: UserComponent, pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/User/user.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user: User;\n  successMsg: string;\n  errorMsg: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegister(formUser) {\n    console.log(formUser.value);\n    this.user = {\n      UserName: formUser.value.username,\n      Email: formUser.value.email,\n      Password: formUser.value.password,\n      ConfirmPassword: formUser.value.confirmpassword,\n      FirstName: formUser.value.fname,\n      LastName: formUser.value.lname,\n    }\n    this.userService.userRegistration(this.user).subscribe((data) => {\n      this.successMsg = \"Success\";\n      console.log(data);\n    }, (error: HttpErrorResponse) => {\n        console.log(error.message);\n        this.errorMsg = error.message;\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div [hidden]=\"!successMsg?.length\" class=\"alert alert-success alert-dismissible fade show m-2\" role=\"alert\">\n        <strong>Successfully</strong> register!\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form #registerForm=\"ngForm\" novalidate (ngSubmit)=\"onRegister(registerForm)\">\n        <br>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <label for=\"fname\">First Name</label>\n                <input type=\"text\" class=\"form-control flex\" id=\"fname\" aria-describedby=\"emailHelp\" #fname=\"ngModel\" ngModel name=\"fname\">\n            </div>\n\n            <div class=\"col\">\n                <label for=\"lname\">Last Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"lname\" aria-describedby=\"emailHelp\" #lname=\"ngModel\" ngModel name=\"lname\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <label for=\"email\">Email</label>\n                <span class=\"text-danger\">*</span>\n                <input type=\"email\" class=\"form-control\" id=\"email\" #email=\"ngModel\" ngModel name=\"email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"[ngClass]=\"{\n                'is-invalid': email.invalid && (email.dirty || email.touched),\n                'is-valid': email.valid\n            }\">\n\n                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"email.errors.required\">\n                        Email is required.\n                    </div>\n                    <div *ngIf=\"email.errors?.pattern\">\n                        Please enater a valid email\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col\">\n                <label for=\"username\">Username (Optional)</label>\n                <input type=\"text\" class=\"form-control\" id=\"username\" #username=\"ngModel\" ngModel name=\"username\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <label for=\"password\">Password</label>\n                <span class=\"text-danger\">*</span>\n                <input type=\"password\" class=\"form-control\" id=\"password\" #password=\"ngModel\" ngModel name=\"password\" required minlength=\"6\" \n                [ngClass]=\"{\n                'is-invalid': password.invalid && (password.dirty || password.touched),\n                'is-valid': password.valid\n                }\">\n            \n                <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"password.errors.required\">\n                        Password is required.\n                    </div>\n                    <div *ngIf=\"password.errors.minlength\">\n                        Password must be at least 6 characters long.\n                    </div>\n                </div>\n            </div> \n\n            <div class=\"col\">\n                <label for=\"confirmpassword\">Confirm Password</label>\n                <span class=\"text-danger\">*</span>\n                <input type=\"password\" class=\"form-control\" id=\"confirmpassword\" #confirmpassword=\"ngModel\" ngModel name=\"confirmpassword\" required ngValidateEqual=\"password\"\n                [ngClass]=\"{\n                'is-invalid': confirmpassword.invalid && (confirmpassword.dirty || confirmpassword.touched),\n                'is-valid': confirmpassword.valid\n                }\">\n\n                <div *ngIf=\"confirmpassword.invalid && (confirmpassword.dirty || confirmpassword.touched)\" class=\"invalid-feedback\">\n                    <div *ngIf=\"confirmpassword.errors.required\">\n                        Confirm Password is required.\n                    </div>\n                    <div *ngIf=\"confirmpassword.errors.notEqual\">\n                        Passwords Don't Match.\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-raised-button [disabled]=\"!registerForm.valid\" type=\"submit\" color=\"primary\">Register</button>\n    </form>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component'\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"container d-flex justify-content-between\">\n        <span>Task Management System</span>\n    </div>\n</mat-toolbar>\n\n<div class=\"container\">\n    <mat-card class=\"box mt-5\">\n            <mat-tab-group mat-stretch-tabs mat-align-tabs=\"center\" #tabGroup class=\"example-stretched-tabs\">\n                <mat-tab  label=\"Login\" #tabLogin>\n                    <app-login *ngIf=\"tabGroup.selectedIndex === 0\"></app-login>\n                </mat-tab>\n                <mat-tab  label=\"Register\" #tabRegister>\n                    <app-register *ngIf=\"tabGroup.selectedIndex === 1\"></app-register>\n                </mat-tab>\n            </mat-tab-group>\n    </mat-card>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}